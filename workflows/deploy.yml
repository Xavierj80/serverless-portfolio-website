# Workflow to build and deploy the Serverless Application Model (SAM) backend
name: Deploy Serverless Backend

# Triggers the workflow on pushes to the 'main' branch
on:
  push:
    branches:
      - main
    # IMPROVEMENT: Only trigger if the backend code or template changes, saving CI/CD minutes.
    paths:
      - 'template.yml'
      - 'contact_form/**'

# Define environment variables used throughout the deployment process
env:
  STACK_NAME: serverless-portfolio-api
  AWS_REGION: us-east-1
  # CRITICAL: Please verify this S3 bucket name is 100% correct in your AWS account
  S3_ARTIFACT_BUCKET: xavierawws.com

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    # Required for the secure OIDC authentication method
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials (Using OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          # CRITICAL: Ensure this ARN is exactly correct for your IAM role
          role-to-assume: arn:aws:iam::897279496475:role/MyProject_prod_CICD-Role
          role-session-name: github-actions-deployment

      - name: Set up Python and Install SAM CLI
        run: pip install aws-sam-cli

      - name: SAM Build (CRITICAL FIX: Packages local code and creates built template)
        # This step takes the local path (CodeUri: contact_form/) and converts it to an S3 reference.
        run: sam build --template template.yml

      - name: SAM Deploy (Uses the built template with the correct S3 URI)
        # We explicitly target the template generated by the 'sam build' step (.aws-sam/build/template.yaml).
        run: |
          sam deploy \
            --template-file .aws-sam/build/template.yaml \
            --stack-name ${{ env.STACK_NAME }} \
            --region ${{ env.AWS_REGION }} \
            --no-confirm-changeset \
            --capabilities CAPABILITY_IAM \
            --fail-on-empty-changeset \
            --s3-bucket ${{ env.S3_ARTIFACT_BUCKET }}